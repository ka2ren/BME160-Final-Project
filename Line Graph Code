#!/usr/bin/env python3
# Name: Keerthana, Karen, Jooyoung

import matplotlib.pyplot as plt

# Function to read sequence from FASTA without Biopython
def read_fasta(file_path):
    sequence = ""
    with open(file_path, "r") as f:
        for line in f:
            if not line.startswith(">"):
                sequence += line.strip().upper()
    return sequence

# Running count of "TTAGGG"
def running_ttaggg_count(sequence, step=10000):
    counts = []
    cumulative = 0
    for i in range(0, len(sequence), step):
        window = sequence[i:i+step]
        count = window.count("TTAGGG")
        cumulative += count
        counts.append(cumulative)
        
        if i % 1000000 == 0:
            print(f"Processed {i} bases...")
    return counts

# Load sequences
grch38_seq = read_fasta("/Users/jooyounggwag/BME 160/Final Project/GRCH38_test.fasta")
t2t_seq = read_fasta("/Users/jooyounggwag/BME 160/Final Project/T2T_chr1.fasta")

# Extract first and last 100,000 bases
grch38_seq = grch38_seq[:100000]
t2t_seq = t2t_seq[:100000]

# Set step size
step_size = 10000

# Running counts
y_grch = running_ttaggg_count(grch38_seq, step=step_size)
y_t2t = running_ttaggg_count(t2t_seq, step=step_size)

# Generate X values (base pairs)
x_values = list(range(step_size, step_size * (len(y_grch) + 1), step_size))

# Plot
plt.figure(figsize=(10, 6))
plt.plot(x_values, y_grch, label="GRCh38")
plt.plot(x_values, y_t2t, label="T2T-CHM13")
plt.xlabel("Base Pairs")
plt.ylabel("Cumulative TTAGGG Count")
plt.title("Cumulative TTAGGG Repeats in Telomeric Regions")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
